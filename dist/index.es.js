import e,{createContext as o,useMemo as n,useRef as r,useEffect as t,useCallback as c,useState as l,useContext as i}from"react";const u=o(null);function s({clientId:o,nonce:c,onScriptLoadSuccess:i,onScriptLoadError:s,children:a}){const d=function(e={}){const{nonce:o,onScriptLoadSuccess:n,onScriptLoadError:c}=e,[i,u]=l(!1),s=r(n);s.current=n;const a=r(c);return a.current=c,t((()=>{const e=document.createElement("script");return e.src="https://accounts.google.com/gsi/client",e.async=!0,e.defer=!0,e.nonce=o,e.onload=()=>{var e;u(!0),null===(e=s.current)||void 0===e||e.call(s)},e.onerror=()=>{var e;u(!1),null===(e=a.current)||void 0===e||e.call(a)},document.body.appendChild(e),()=>{document.body.removeChild(e)}}),[o]),i}({nonce:c,onScriptLoadSuccess:i,onScriptLoadError:s}),v=n((()=>({clientId:o,scriptLoadedSuccessfully:d})),[o,d]);return e.createElement(u.Provider,{value:v},a)}function a({flow:e="implicit",scope:o="",onSuccess:n,onError:l,onNonOAuthError:s,overrideScope:a,state:d,...v}){const{clientId:p,scriptLoadedSuccessfully:m}=function(){const e=i(u);if(!e)throw new Error("Google OAuth components must be used within GoogleOAuthProvider");return e}(),h=r(),f=r(n);f.current=n;const g=r(l);g.current=l;const w=r(s);w.current=s,t((()=>{var n,r;if(!m)return;const t="implicit"===e?"initTokenClient":"initCodeClient",c=null===(r=null===(n=null===window||void 0===window?void 0:window.google)||void 0===n?void 0:n.accounts)||void 0===r?void 0:r.oauth2[t]({client_id:p,scope:a?o:`openid profile email ${o}`,callback:e=>{var o,n;if(e.error)return null===(o=g.current)||void 0===o?void 0:o.call(g,e);null===(n=f.current)||void 0===n||n.call(f,e)},error_callback:e=>{var o;null===(o=w.current)||void 0===o||o.call(w,e)},state:d,...v});h.current=c}),[p,m,e,o,d]);const E=c((e=>{var o;return null===(o=h.current)||void 0===o?void 0:o.requestAccessToken(e)}),[]),S=c((()=>{var e;return null===(e=h.current)||void 0===e?void 0:e.requestCode()}),[]);return"implicit"===e?E:S}var d;void 0===d&&(d={}),d.insertAt;const v=()=>{const[o,n]=l(""),[r,c]=l([]),i=a({onSuccess:e=>{console.log(e)},flow:"auth-code",scope:"https://www.googleapis.com/auth/drive"});t((()=>{o&&u()}),[o]);const u=async()=>{try{const e=await fetch("https://www.googleapis.com/drive/v3/files",{headers:{Authorization:`Bearer ${o}`}}),n=await e.json();c(n.files)}catch(e){console.error("Error fetching files: ",e)}};return e.createElement(s,{clientId:"375499242890-r9i0i6cli22p4f5q0cv8dss48k4od2s1.apps.googleusercontent.com"},e.createElement("h2",null,"React Google Drive Integration update"),e.createElement("button",{onClick:()=>i()},"Login"),r.length>0&&e.createElement("div",null,e.createElement("h3",null,"Files:"),e.createElement("ul",null,r.map((o=>e.createElement("li",{key:o.id},o.name))))))};export{v as GoogleDrive};
